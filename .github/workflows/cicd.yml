name: CI/CD Pipeline

on:
  [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sepocmstest
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=2s
          --health-retries=30
    env:
      DATABASE_HOST: 127.0.0.1
      DATABASE_USER: root
      DATABASE_PASS: root
      DATABASE_NAME: sepocmstest
      JWT_TOKEN: secret1
      JWT_REFRESG_TOKEN: secret2
      PORT: 3000

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Wait for MySQL to be ready
      run: |
        until mysqladmin ping -h"${{ env.DATABASE_HOST }}" --silent; do
          echo 'waiting for mysql...'
          sleep 5
        done

    - name: Run tests
      run: npm test

  docker:
    runs-on: ubuntu-22.04
    needs: build
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t cybersepo/sepocms:latest .

    - name: Push Docker image
      run: |
        docker push cybersepo/sepocms:latest

  # deploy:
  #   runs-on: ubuntu-22.04
  #   needs: docker
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up SSH
  #     uses: webfactory/ssh-agent@v0.5.0
  #     with:
  #       ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #   - name: Deploy to server
  #     run: |
  #       ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
  #         cd /path/to/deployment
  #         docker pull cybersepo/sepocms:latest
  #         docker-compose down
  #         docker-compose up -d
  #       EOF
